{"config":{"indexing":"full","lang":["en","ja","es"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs # For full documentation visit mkdocs.org . Commands # mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout # mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Hi"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"01-Tab2/","text":"Tab2 Example # knitr::opts_chunk$set(echo = TRUE) R Markdown TIps # the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, echo=FALSE, eval=FALSE} system2(command = \"ls\") system2(command = \"pwd\") r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github Plan 220826 # [x] Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... [ ] Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) [ ] Create Mkdocs repositories in /documents/GitHub/ [ ] Confect them to a GitHub repo [ ] Use symlinks for the .md files stored in doc/github/ folders [ ] Make GitHub commits as normal? [ ] Build and deploy site as normal? :::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name: LabNotes site_url: https://example.com_or_my.github repo_url: https://github.com/squidfunk/mkdocs-material # url link of ripo in navbar repo_name: squidfunk/mkdocs-material # name of ripo to be displayed in navbar nav: - Home: - Hi: \"index.md\" - Tab2: \"Tab2.md\" - Tab3: \"Tab3.md\" - Tab4: - sub1: - sub2: - sub3: - sub4: \"Tab4.md\" theme: # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name: material favicon: assets/NiigataUicon.png # small icon in the \"browser`s\" tap. Save @ /dir. features: # - navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette: #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary: Default # The original was scheme: Default accent: red # Colors change on hover. toggle: icon: material/brightness-7 name: Switch to dark mode # Palette toggle for dark mode - scheme: slate accent: light green # Colors change on hover. toggle: icon: material/brightness-4 name: Switch to light mode accent: red # Colors change on hover. logo: # assets/logo.png assets/NiigataUicon.png icon: repo: fontawesome/brands/git-alt # repo icon extra: homepage: https://www.niigata-u.ac.jp/ # url for the logo icon #include_sidebar: true #===================================================================================# # Mkdocs Markdown Extentions, Plugins & extras #===================================================================================# markdown_extensions: - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist: custom_checkbox: true - pymdownx.superfences - pymdownx.tabbed: alternate_style: true - toc: # insert a blank space before the character permalink: \"#\" plugins: - glightbox # istall requied: images/lightbox - search # add search box. - i18n: # language plugin. default_language: en languages: en: English ja: \u65e5\u672c\u8a9e es: Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mk_LabNotes.git https://github.com/MarceloRosales/mkd_LabNotes2.git https://github.com/MarceloRosales/mk_LabNotes2.git https://github.com/MarceloRosales/LabNotes3.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main :::","title":"Tab2"},{"location":"01-Tab2/#tab2-example","text":"knitr::opts_chunk$set(echo = TRUE)","title":"Tab2 Example"},{"location":"01-Tab2/#r-markdown-tips","text":"the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, echo=FALSE, eval=FALSE} system2(command = \"ls\") system2(command = \"pwd\") r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github","title":"R Markdown TIps"},{"location":"01-Tab2/#plan-220826","text":"[x] Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... [ ] Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) [ ] Create Mkdocs repositories in /documents/GitHub/ [ ] Confect them to a GitHub repo [ ] Use symlinks for the .md files stored in doc/github/ folders [ ] Make GitHub commits as normal? [ ] Build and deploy site as normal? :::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name: LabNotes site_url: https://example.com_or_my.github repo_url: https://github.com/squidfunk/mkdocs-material # url link of ripo in navbar repo_name: squidfunk/mkdocs-material # name of ripo to be displayed in navbar nav: - Home: - Hi: \"index.md\" - Tab2: \"Tab2.md\" - Tab3: \"Tab3.md\" - Tab4: - sub1: - sub2: - sub3: - sub4: \"Tab4.md\" theme: # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name: material favicon: assets/NiigataUicon.png # small icon in the \"browser`s\" tap. Save @ /dir. features: # - navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette: #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary: Default # The original was scheme: Default accent: red # Colors change on hover. toggle: icon: material/brightness-7 name: Switch to dark mode # Palette toggle for dark mode - scheme: slate accent: light green # Colors change on hover. toggle: icon: material/brightness-4 name: Switch to light mode accent: red # Colors change on hover. logo: # assets/logo.png assets/NiigataUicon.png icon: repo: fontawesome/brands/git-alt # repo icon extra: homepage: https://www.niigata-u.ac.jp/ # url for the logo icon #include_sidebar: true #===================================================================================# # Mkdocs Markdown Extentions, Plugins & extras #===================================================================================# markdown_extensions: - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist: custom_checkbox: true - pymdownx.superfences - pymdownx.tabbed: alternate_style: true - toc: # insert a blank space before the character permalink: \"#\" plugins: - glightbox # istall requied: images/lightbox - search # add search box. - i18n: # language plugin. default_language: en languages: en: English ja: \u65e5\u672c\u8a9e es: Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mk_LabNotes.git https://github.com/MarceloRosales/mkd_LabNotes2.git https://github.com/MarceloRosales/mk_LabNotes2.git https://github.com/MarceloRosales/LabNotes3.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main :::","title":"Plan 220826"},{"location":"02-Tab3/","text":"Tab3 Example # For full documentation visit mkdocs.org . Commands # Lorem...","title":"Tab3"},{"location":"02-Tab3/#tab3-example","text":"For full documentation visit mkdocs.org .","title":"Tab3 Example"},{"location":"02-Tab3/#commands","text":"Lorem...","title":"Commands"},{"location":"03-Tab4/","text":"Tab4 Example # For full documentation visit mkdocs.org . Commands # Lorem...","title":"Tab4 Example"},{"location":"03-Tab4/#tab4-example","text":"For full documentation visit mkdocs.org .","title":"Tab4 Example"},{"location":"03-Tab4/#commands","text":"Lorem...","title":"Commands"},{"location":"08-Preparation/","text":"Tab2 Example # R Markdown TIps # the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. {sh, eval=FALSE} pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, eval=FALSE} system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github Plan 220826 # Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) Create Mkdocs repositories in /documents/GitHub/ Confect them to a GitHub repo Use symlinks for the .md files stored in doc/github/ folders Make GitHub commits as normal? Build and deploy site as normal? Create Mkdocs site # :::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name : LabNotes site_url : https :// example.com_or_my.github repo_url : https :// github.com / squidfunk / mkdocs - material # url link of ripo in navbar repo_name : squidfunk / mkdocs - material # name of ripo to be displayed in navbar nav : - Home : - Hi : \"index.md\" - Tab2 : \"01-Tab2.md\" - Tab3 : \"02-Tab3.md\" - Tab4 : - sub1 : - sub2 : - sub3 : - sub4 : \"03-Tab4.md\" theme : # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name : material favicon : assets / NiigataUicon.png #small icon in the \"browser`s\" tap.Save @ /dir features : #- navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette : #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary : Default # The original was scheme: Default accent : red # Colors change on hover. toggle : icon : material / brightness -7 name : Switch to dark mode # Palette toggle for dark mode - scheme : slate accent : light green # Colors change on hover. toggle : icon : material / brightness -4 name : Switch to light mode accent : red # Colors change on hover. logo : # assets/logo.png assets / NiigataUicon.png icon : repo : fontawesome / brands / git - alt # repo icon extra : homepage : https :// www.niigata - u.ac.jp / # url for the logo icon #include_sidebar: true #=================================================================================== # Mkdocs Markdown Extentions, Plugins & extras #=================================================================================== markdown_extensions : - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist : custom_checkbox : true - pymdownx.superfences - pymdownx.tabbed : alternate_style : true - toc : # insert a blank space before the character permalink : \"#\" plugins : - glightbox # istall requied: images/lightbox - search # add search box. - i18n : # language plugin. default_language : en languages : en : English ja : \u65e5\u672c\u8a9e es : Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mkd_LabNotes.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main ::: Create bs4_book in Rstudio # //Rstudio > New Project > Book project using bookdown > \u2026[]\u2026 > Select book format: bs4_book > \u00a9 Open in new session. Add 08-Preparation.Rmd [Build] > Build Book > bs4_book (wil convert .Rmd -> .md in /_book) Creating symlinks # To make symlink: ln -s /path/of/original/file /path/to/taget/dir/{filename} Box Sync/../.md -> ~/Documents/gitrepo/.md Ex. From: \u201c/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d To: \u201c/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d Samples \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" Fail Partial address do NOT work. \u201c~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d \u201c~/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d ln -s \"~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" Allways work the in bs4_book .Rmd","title":"sub4"},{"location":"08-Preparation/#tab2-example","text":"","title":"Tab2 Example"},{"location":"08-Preparation/#r-markdown-tips","text":"the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. {sh, eval=FALSE} pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, eval=FALSE} system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github","title":"R Markdown TIps"},{"location":"08-Preparation/#plan-220826","text":"Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) Create Mkdocs repositories in /documents/GitHub/ Confect them to a GitHub repo Use symlinks for the .md files stored in doc/github/ folders Make GitHub commits as normal? Build and deploy site as normal?","title":"Plan 220826"},{"location":"08-Preparation/#create-mkdocs-site","text":":::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name : LabNotes site_url : https :// example.com_or_my.github repo_url : https :// github.com / squidfunk / mkdocs - material # url link of ripo in navbar repo_name : squidfunk / mkdocs - material # name of ripo to be displayed in navbar nav : - Home : - Hi : \"index.md\" - Tab2 : \"01-Tab2.md\" - Tab3 : \"02-Tab3.md\" - Tab4 : - sub1 : - sub2 : - sub3 : - sub4 : \"03-Tab4.md\" theme : # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name : material favicon : assets / NiigataUicon.png #small icon in the \"browser`s\" tap.Save @ /dir features : #- navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette : #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary : Default # The original was scheme: Default accent : red # Colors change on hover. toggle : icon : material / brightness -7 name : Switch to dark mode # Palette toggle for dark mode - scheme : slate accent : light green # Colors change on hover. toggle : icon : material / brightness -4 name : Switch to light mode accent : red # Colors change on hover. logo : # assets/logo.png assets / NiigataUicon.png icon : repo : fontawesome / brands / git - alt # repo icon extra : homepage : https :// www.niigata - u.ac.jp / # url for the logo icon #include_sidebar: true #=================================================================================== # Mkdocs Markdown Extentions, Plugins & extras #=================================================================================== markdown_extensions : - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist : custom_checkbox : true - pymdownx.superfences - pymdownx.tabbed : alternate_style : true - toc : # insert a blank space before the character permalink : \"#\" plugins : - glightbox # istall requied: images/lightbox - search # add search box. - i18n : # language plugin. default_language : en languages : en : English ja : \u65e5\u672c\u8a9e es : Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mkd_LabNotes.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main :::","title":"Create Mkdocs site"},{"location":"08-Preparation/#create-bs4_book-in-rstudio","text":"//Rstudio > New Project > Book project using bookdown > \u2026[]\u2026 > Select book format: bs4_book > \u00a9 Open in new session. Add 08-Preparation.Rmd [Build] > Build Book > bs4_book (wil convert .Rmd -> .md in /_book)","title":"Create bs4_book in Rstudio"},{"location":"08-Preparation/#creating-symlinks","text":"To make symlink: ln -s /path/of/original/file /path/to/taget/dir/{filename} Box Sync/../.md -> ~/Documents/gitrepo/.md Ex. From: \u201c/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d To: \u201c/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d Samples \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" Fail Partial address do NOT work. \u201c~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d \u201c~/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d ln -s \"~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" Allways work the in bs4_book .Rmd","title":"Creating symlinks"},{"location":"ja/","text":"Welcome to MkDocs # For full documentation visit mkdocs.org . Commands # mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout # mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Hi"},{"location":"ja/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"ja/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"ja/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"ja/01-Tab2/","text":"Tab2 Example # knitr::opts_chunk$set(echo = TRUE) R Markdown TIps # the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, echo=FALSE, eval=FALSE} system2(command = \"ls\") system2(command = \"pwd\") r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github Plan 220826 # [x] Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... [ ] Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) [ ] Create Mkdocs repositories in /documents/GitHub/ [ ] Confect them to a GitHub repo [ ] Use symlinks for the .md files stored in doc/github/ folders [ ] Make GitHub commits as normal? [ ] Build and deploy site as normal? :::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name: LabNotes site_url: https://example.com_or_my.github repo_url: https://github.com/squidfunk/mkdocs-material # url link of ripo in navbar repo_name: squidfunk/mkdocs-material # name of ripo to be displayed in navbar nav: - Home: - Hi: \"index.md\" - Tab2: \"Tab2.md\" - Tab3: \"Tab3.md\" - Tab4: - sub1: - sub2: - sub3: - sub4: \"Tab4.md\" theme: # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name: material favicon: assets/NiigataUicon.png # small icon in the \"browser`s\" tap. Save @ /dir. features: # - navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette: #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary: Default # The original was scheme: Default accent: red # Colors change on hover. toggle: icon: material/brightness-7 name: Switch to dark mode # Palette toggle for dark mode - scheme: slate accent: light green # Colors change on hover. toggle: icon: material/brightness-4 name: Switch to light mode accent: red # Colors change on hover. logo: # assets/logo.png assets/NiigataUicon.png icon: repo: fontawesome/brands/git-alt # repo icon extra: homepage: https://www.niigata-u.ac.jp/ # url for the logo icon #include_sidebar: true #===================================================================================# # Mkdocs Markdown Extentions, Plugins & extras #===================================================================================# markdown_extensions: - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist: custom_checkbox: true - pymdownx.superfences - pymdownx.tabbed: alternate_style: true - toc: # insert a blank space before the character permalink: \"#\" plugins: - glightbox # istall requied: images/lightbox - search # add search box. - i18n: # language plugin. default_language: en languages: en: English ja: \u65e5\u672c\u8a9e es: Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mk_LabNotes.git https://github.com/MarceloRosales/mkd_LabNotes2.git https://github.com/MarceloRosales/mk_LabNotes2.git https://github.com/MarceloRosales/LabNotes3.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main :::","title":"Tab2"},{"location":"ja/01-Tab2/#tab2-example","text":"knitr::opts_chunk$set(echo = TRUE)","title":"Tab2 Example"},{"location":"ja/01-Tab2/#r-markdown-tips","text":"the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, echo=FALSE, eval=FALSE} system2(command = \"ls\") system2(command = \"pwd\") r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github","title":"R Markdown TIps"},{"location":"ja/01-Tab2/#plan-220826","text":"[x] Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... [ ] Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) [ ] Create Mkdocs repositories in /documents/GitHub/ [ ] Confect them to a GitHub repo [ ] Use symlinks for the .md files stored in doc/github/ folders [ ] Make GitHub commits as normal? [ ] Build and deploy site as normal? :::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name: LabNotes site_url: https://example.com_or_my.github repo_url: https://github.com/squidfunk/mkdocs-material # url link of ripo in navbar repo_name: squidfunk/mkdocs-material # name of ripo to be displayed in navbar nav: - Home: - Hi: \"index.md\" - Tab2: \"Tab2.md\" - Tab3: \"Tab3.md\" - Tab4: - sub1: - sub2: - sub3: - sub4: \"Tab4.md\" theme: # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name: material favicon: assets/NiigataUicon.png # small icon in the \"browser`s\" tap. Save @ /dir. features: # - navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette: #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary: Default # The original was scheme: Default accent: red # Colors change on hover. toggle: icon: material/brightness-7 name: Switch to dark mode # Palette toggle for dark mode - scheme: slate accent: light green # Colors change on hover. toggle: icon: material/brightness-4 name: Switch to light mode accent: red # Colors change on hover. logo: # assets/logo.png assets/NiigataUicon.png icon: repo: fontawesome/brands/git-alt # repo icon extra: homepage: https://www.niigata-u.ac.jp/ # url for the logo icon #include_sidebar: true #===================================================================================# # Mkdocs Markdown Extentions, Plugins & extras #===================================================================================# markdown_extensions: - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist: custom_checkbox: true - pymdownx.superfences - pymdownx.tabbed: alternate_style: true - toc: # insert a blank space before the character permalink: \"#\" plugins: - glightbox # istall requied: images/lightbox - search # add search box. - i18n: # language plugin. default_language: en languages: en: English ja: \u65e5\u672c\u8a9e es: Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mk_LabNotes.git https://github.com/MarceloRosales/mkd_LabNotes2.git https://github.com/MarceloRosales/mk_LabNotes2.git https://github.com/MarceloRosales/LabNotes3.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main :::","title":"Plan 220826"},{"location":"ja/02-Tab3/","text":"Tab3 Example # For full documentation visit mkdocs.org . Commands # Lorem...","title":"Tab3"},{"location":"ja/02-Tab3/#tab3-example","text":"For full documentation visit mkdocs.org .","title":"Tab3 Example"},{"location":"ja/02-Tab3/#commands","text":"Lorem...","title":"Commands"},{"location":"ja/03-Tab4/","text":"Tab4 Example # For full documentation visit mkdocs.org . Commands # Lorem...","title":"Tab4 Example"},{"location":"ja/03-Tab4/#tab4-example","text":"For full documentation visit mkdocs.org .","title":"Tab4 Example"},{"location":"ja/03-Tab4/#commands","text":"Lorem...","title":"Commands"},{"location":"ja/08-Preparation/","text":"Tab2 Example # R Markdown TIps # the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. {sh, eval=FALSE} pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, eval=FALSE} system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github Plan 220826 # Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) Create Mkdocs repositories in /documents/GitHub/ Confect them to a GitHub repo Use symlinks for the .md files stored in doc/github/ folders Make GitHub commits as normal? Build and deploy site as normal? Create Mkdocs site # :::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name : LabNotes site_url : https :// example.com_or_my.github repo_url : https :// github.com / squidfunk / mkdocs - material # url link of ripo in navbar repo_name : squidfunk / mkdocs - material # name of ripo to be displayed in navbar nav : - Home : - Hi : \"index.md\" - Tab2 : \"01-Tab2.md\" - Tab3 : \"02-Tab3.md\" - Tab4 : - sub1 : - sub2 : - sub3 : - sub4 : \"03-Tab4.md\" theme : # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name : material favicon : assets / NiigataUicon.png #small icon in the \"browser`s\" tap.Save @ /dir features : #- navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette : #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary : Default # The original was scheme: Default accent : red # Colors change on hover. toggle : icon : material / brightness -7 name : Switch to dark mode # Palette toggle for dark mode - scheme : slate accent : light green # Colors change on hover. toggle : icon : material / brightness -4 name : Switch to light mode accent : red # Colors change on hover. logo : # assets/logo.png assets / NiigataUicon.png icon : repo : fontawesome / brands / git - alt # repo icon extra : homepage : https :// www.niigata - u.ac.jp / # url for the logo icon #include_sidebar: true #=================================================================================== # Mkdocs Markdown Extentions, Plugins & extras #=================================================================================== markdown_extensions : - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist : custom_checkbox : true - pymdownx.superfences - pymdownx.tabbed : alternate_style : true - toc : # insert a blank space before the character permalink : \"#\" plugins : - glightbox # istall requied: images/lightbox - search # add search box. - i18n : # language plugin. default_language : en languages : en : English ja : \u65e5\u672c\u8a9e es : Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mkd_LabNotes.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main ::: Create bs4_book in Rstudio # //Rstudio > New Project > Book project using bookdown > \u2026[]\u2026 > Select book format: bs4_book > \u00a9 Open in new session. Add 08-Preparation.Rmd [Build] > Build Book > bs4_book (wil convert .Rmd -> .md in /_book) Creating symlinks # To make symlink: ln -s /path/of/original/file /path/to/taget/dir/{filename} Box Sync/../.md -> ~/Documents/gitrepo/.md Ex. From: \u201c/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d To: \u201c/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d Samples \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" Fail Partial address do NOT work. \u201c~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d \u201c~/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d ln -s \"~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" Allways work the in bs4_book .Rmd","title":"sub4"},{"location":"ja/08-Preparation/#tab2-example","text":"","title":"Tab2 Example"},{"location":"ja/08-Preparation/#r-markdown-tips","text":"the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. {sh, eval=FALSE} pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, eval=FALSE} system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github","title":"R Markdown TIps"},{"location":"ja/08-Preparation/#plan-220826","text":"Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) Create Mkdocs repositories in /documents/GitHub/ Confect them to a GitHub repo Use symlinks for the .md files stored in doc/github/ folders Make GitHub commits as normal? Build and deploy site as normal?","title":"Plan 220826"},{"location":"ja/08-Preparation/#create-mkdocs-site","text":":::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name : LabNotes site_url : https :// example.com_or_my.github repo_url : https :// github.com / squidfunk / mkdocs - material # url link of ripo in navbar repo_name : squidfunk / mkdocs - material # name of ripo to be displayed in navbar nav : - Home : - Hi : \"index.md\" - Tab2 : \"01-Tab2.md\" - Tab3 : \"02-Tab3.md\" - Tab4 : - sub1 : - sub2 : - sub3 : - sub4 : \"03-Tab4.md\" theme : # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name : material favicon : assets / NiigataUicon.png #small icon in the \"browser`s\" tap.Save @ /dir features : #- navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette : #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary : Default # The original was scheme: Default accent : red # Colors change on hover. toggle : icon : material / brightness -7 name : Switch to dark mode # Palette toggle for dark mode - scheme : slate accent : light green # Colors change on hover. toggle : icon : material / brightness -4 name : Switch to light mode accent : red # Colors change on hover. logo : # assets/logo.png assets / NiigataUicon.png icon : repo : fontawesome / brands / git - alt # repo icon extra : homepage : https :// www.niigata - u.ac.jp / # url for the logo icon #include_sidebar: true #=================================================================================== # Mkdocs Markdown Extentions, Plugins & extras #=================================================================================== markdown_extensions : - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist : custom_checkbox : true - pymdownx.superfences - pymdownx.tabbed : alternate_style : true - toc : # insert a blank space before the character permalink : \"#\" plugins : - glightbox # istall requied: images/lightbox - search # add search box. - i18n : # language plugin. default_language : en languages : en : English ja : \u65e5\u672c\u8a9e es : Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mkd_LabNotes.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main :::","title":"Create Mkdocs site"},{"location":"ja/08-Preparation/#create-bs4_book-in-rstudio","text":"//Rstudio > New Project > Book project using bookdown > \u2026[]\u2026 > Select book format: bs4_book > \u00a9 Open in new session. Add 08-Preparation.Rmd [Build] > Build Book > bs4_book (wil convert .Rmd -> .md in /_book)","title":"Create bs4_book in Rstudio"},{"location":"ja/08-Preparation/#creating-symlinks","text":"To make symlink: ln -s /path/of/original/file /path/to/taget/dir/{filename} Box Sync/../.md -> ~/Documents/gitrepo/.md Ex. From: \u201c/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d To: \u201c/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d Samples \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" Fail Partial address do NOT work. \u201c~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d \u201c~/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d ln -s \"~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" Allways work the in bs4_book .Rmd","title":"Creating symlinks"},{"location":"es/","text":"Welcome to MkDocs # For full documentation visit mkdocs.org . Commands # mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout # mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Hi"},{"location":"es/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"es/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"es/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"es/01-Tab2/","text":"Tab2 Example # knitr::opts_chunk$set(echo = TRUE) R Markdown TIps # the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, echo=FALSE, eval=FALSE} system2(command = \"ls\") system2(command = \"pwd\") r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github Plan 220826 # [x] Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... [ ] Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) [ ] Create Mkdocs repositories in /documents/GitHub/ [ ] Confect them to a GitHub repo [ ] Use symlinks for the .md files stored in doc/github/ folders [ ] Make GitHub commits as normal? [ ] Build and deploy site as normal? :::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name: LabNotes site_url: https://example.com_or_my.github repo_url: https://github.com/squidfunk/mkdocs-material # url link of ripo in navbar repo_name: squidfunk/mkdocs-material # name of ripo to be displayed in navbar nav: - Home: - Hi: \"index.md\" - Tab2: \"Tab2.md\" - Tab3: \"Tab3.md\" - Tab4: - sub1: - sub2: - sub3: - sub4: \"Tab4.md\" theme: # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name: material favicon: assets/NiigataUicon.png # small icon in the \"browser`s\" tap. Save @ /dir. features: # - navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette: #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary: Default # The original was scheme: Default accent: red # Colors change on hover. toggle: icon: material/brightness-7 name: Switch to dark mode # Palette toggle for dark mode - scheme: slate accent: light green # Colors change on hover. toggle: icon: material/brightness-4 name: Switch to light mode accent: red # Colors change on hover. logo: # assets/logo.png assets/NiigataUicon.png icon: repo: fontawesome/brands/git-alt # repo icon extra: homepage: https://www.niigata-u.ac.jp/ # url for the logo icon #include_sidebar: true #===================================================================================# # Mkdocs Markdown Extentions, Plugins & extras #===================================================================================# markdown_extensions: - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist: custom_checkbox: true - pymdownx.superfences - pymdownx.tabbed: alternate_style: true - toc: # insert a blank space before the character permalink: \"#\" plugins: - glightbox # istall requied: images/lightbox - search # add search box. - i18n: # language plugin. default_language: en languages: en: English ja: \u65e5\u672c\u8a9e es: Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mk_LabNotes.git https://github.com/MarceloRosales/mkd_LabNotes2.git https://github.com/MarceloRosales/mk_LabNotes2.git https://github.com/MarceloRosales/LabNotes3.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main :::","title":"Tab2"},{"location":"es/01-Tab2/#tab2-example","text":"knitr::opts_chunk$set(echo = TRUE)","title":"Tab2 Example"},{"location":"es/01-Tab2/#r-markdown-tips","text":"the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, echo=FALSE, eval=FALSE} system2(command = \"ls\") system2(command = \"pwd\") r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github","title":"R Markdown TIps"},{"location":"es/01-Tab2/#plan-220826","text":"[x] Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... [ ] Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) [ ] Create Mkdocs repositories in /documents/GitHub/ [ ] Confect them to a GitHub repo [ ] Use symlinks for the .md files stored in doc/github/ folders [ ] Make GitHub commits as normal? [ ] Build and deploy site as normal? :::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name: LabNotes site_url: https://example.com_or_my.github repo_url: https://github.com/squidfunk/mkdocs-material # url link of ripo in navbar repo_name: squidfunk/mkdocs-material # name of ripo to be displayed in navbar nav: - Home: - Hi: \"index.md\" - Tab2: \"Tab2.md\" - Tab3: \"Tab3.md\" - Tab4: - sub1: - sub2: - sub3: - sub4: \"Tab4.md\" theme: # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name: material favicon: assets/NiigataUicon.png # small icon in the \"browser`s\" tap. Save @ /dir. features: # - navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette: #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary: Default # The original was scheme: Default accent: red # Colors change on hover. toggle: icon: material/brightness-7 name: Switch to dark mode # Palette toggle for dark mode - scheme: slate accent: light green # Colors change on hover. toggle: icon: material/brightness-4 name: Switch to light mode accent: red # Colors change on hover. logo: # assets/logo.png assets/NiigataUicon.png icon: repo: fontawesome/brands/git-alt # repo icon extra: homepage: https://www.niigata-u.ac.jp/ # url for the logo icon #include_sidebar: true #===================================================================================# # Mkdocs Markdown Extentions, Plugins & extras #===================================================================================# markdown_extensions: - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist: custom_checkbox: true - pymdownx.superfences - pymdownx.tabbed: alternate_style: true - toc: # insert a blank space before the character permalink: \"#\" plugins: - glightbox # istall requied: images/lightbox - search # add search box. - i18n: # language plugin. default_language: en languages: en: English ja: \u65e5\u672c\u8a9e es: Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mk_LabNotes.git https://github.com/MarceloRosales/mkd_LabNotes2.git https://github.com/MarceloRosales/mk_LabNotes2.git https://github.com/MarceloRosales/LabNotes3.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main :::","title":"Plan 220826"},{"location":"es/02-Tab3/","text":"Tab3 Example # For full documentation visit mkdocs.org . Commands # Lorem...","title":"Tab3"},{"location":"es/02-Tab3/#tab3-example","text":"For full documentation visit mkdocs.org .","title":"Tab3 Example"},{"location":"es/02-Tab3/#commands","text":"Lorem...","title":"Commands"},{"location":"es/03-Tab4/","text":"Tab4 Example # For full documentation visit mkdocs.org . Commands # Lorem...","title":"Tab4 Example"},{"location":"es/03-Tab4/#tab4-example","text":"For full documentation visit mkdocs.org .","title":"Tab4 Example"},{"location":"es/03-Tab4/#commands","text":"Lorem...","title":"Commands"},{"location":"es/08-Preparation/","text":"Tab2 Example # R Markdown TIps # the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. {sh, eval=FALSE} pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, eval=FALSE} system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github Plan 220826 # Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) Create Mkdocs repositories in /documents/GitHub/ Confect them to a GitHub repo Use symlinks for the .md files stored in doc/github/ folders Make GitHub commits as normal? Build and deploy site as normal? Create Mkdocs site # :::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name : LabNotes site_url : https :// example.com_or_my.github repo_url : https :// github.com / squidfunk / mkdocs - material # url link of ripo in navbar repo_name : squidfunk / mkdocs - material # name of ripo to be displayed in navbar nav : - Home : - Hi : \"index.md\" - Tab2 : \"01-Tab2.md\" - Tab3 : \"02-Tab3.md\" - Tab4 : - sub1 : - sub2 : - sub3 : - sub4 : \"03-Tab4.md\" theme : # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name : material favicon : assets / NiigataUicon.png #small icon in the \"browser`s\" tap.Save @ /dir features : #- navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette : #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary : Default # The original was scheme: Default accent : red # Colors change on hover. toggle : icon : material / brightness -7 name : Switch to dark mode # Palette toggle for dark mode - scheme : slate accent : light green # Colors change on hover. toggle : icon : material / brightness -4 name : Switch to light mode accent : red # Colors change on hover. logo : # assets/logo.png assets / NiigataUicon.png icon : repo : fontawesome / brands / git - alt # repo icon extra : homepage : https :// www.niigata - u.ac.jp / # url for the logo icon #include_sidebar: true #=================================================================================== # Mkdocs Markdown Extentions, Plugins & extras #=================================================================================== markdown_extensions : - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist : custom_checkbox : true - pymdownx.superfences - pymdownx.tabbed : alternate_style : true - toc : # insert a blank space before the character permalink : \"#\" plugins : - glightbox # istall requied: images/lightbox - search # add search box. - i18n : # language plugin. default_language : en languages : en : English ja : \u65e5\u672c\u8a9e es : Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mkd_LabNotes.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main ::: Create bs4_book in Rstudio # //Rstudio > New Project > Book project using bookdown > \u2026[]\u2026 > Select book format: bs4_book > \u00a9 Open in new session. Add 08-Preparation.Rmd [Build] > Build Book > bs4_book (wil convert .Rmd -> .md in /_book) Creating symlinks # To make symlink: ln -s /path/of/original/file /path/to/taget/dir/{filename} Box Sync/../.md -> ~/Documents/gitrepo/.md Ex. From: \u201c/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d To: \u201c/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d Samples \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" Fail Partial address do NOT work. \u201c~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d \u201c~/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d ln -s \"~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" Allways work the in bs4_book .Rmd","title":"sub4"},{"location":"es/08-Preparation/#tab2-example","text":"","title":"Tab2 Example"},{"location":"es/08-Preparation/#r-markdown-tips","text":"the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) This runs command lines here in the file, below the chunk, and runs all commands at once. {sh, eval=FALSE} pwd brew --version You can run commands line by line ( Cmd + Enter ) in .R file only. It requires the system2(command = \"command_name\") code line, result will be display in console and below the code chunk all commands at once (no line by line option). {r, eval=FALSE} system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) r system2 ( command = \"ls\" ) system2 ( command = \"pwd\" ) sh ls pwd git commit -m \"message\" {yml} site_name: LabNotes site_url: https://example.com_or_my.github yml site_name: LabNotes site_url: https://example.com_or_my.github","title":"R Markdown TIps"},{"location":"es/08-Preparation/#plan-220826","text":"Create all the files in .Rmd as normal (in Box sync service) as bs4_book Use Rstudio::New Project. mkdocs new LabNotes.... Build site in bs4 -> Converts .Rmd to .m -> Creates a folder with all converted .md files (all files in Box Sync, do NOT connect with git or GitHub) Create Mkdocs repositories in /documents/GitHub/ Confect them to a GitHub repo Use symlinks for the .md files stored in doc/github/ folders Make GitHub commits as normal? Build and deploy site as normal?","title":"Plan 220826"},{"location":"es/08-Preparation/#create-mkdocs-site","text":":::{.note} Installed required (>_) brew --version python --version brew list || brew install brew install python3 brew install python@3.10 pip --version pip3 install --upgrade pip pip3 install mkdoc brew install mkdocs (error) pip3 install mkdocs-material Other Plugins: pip install mkdocs-static-i18n pip install mkdocs-material Create a site with Terminal (>_) mkdocs -h (help) mkdocs new {dir-name} cd {dir-name} ls tree mkdocs serve Cnt+C + code . + rstudio . ? + open -na Rstudio + open myproject.Rproj - Modify yml (simple, just to check if render) - Theme, nav, plugs - Create Tab2.md, Tab3.md, Tab4.md for trial site_name : LabNotes site_url : https :// example.com_or_my.github repo_url : https :// github.com / squidfunk / mkdocs - material # url link of ripo in navbar repo_name : squidfunk / mkdocs - material # name of ripo to be displayed in navbar nav : - Home : - Hi : \"index.md\" - Tab2 : \"01-Tab2.md\" - Tab3 : \"02-Tab3.md\" - Tab4 : - sub1 : - sub2 : - sub3 : - sub4 : \"03-Tab4.md\" theme : # https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#accent-color name : material favicon : assets / NiigataUicon.png #small icon in the \"browser`s\" tap.Save @ /dir features : #- navigation.instant - navigation.tabs #Nav tabs on top - navigation.tabs.sticky # Keeps top nav menu from hiding. #- header.autohide # Hides all top menu. #- navigation.sections #uncollapse all tab sections. - navigation.top palette : #primary: green # Color of the Header #accent: red # Colors change on hover. # Palette toggle for light mode - primary : Default # The original was scheme: Default accent : red # Colors change on hover. toggle : icon : material / brightness -7 name : Switch to dark mode # Palette toggle for dark mode - scheme : slate accent : light green # Colors change on hover. toggle : icon : material / brightness -4 name : Switch to light mode accent : red # Colors change on hover. logo : # assets/logo.png assets / NiigataUicon.png icon : repo : fontawesome / brands / git - alt # repo icon extra : homepage : https :// www.niigata - u.ac.jp / # url for the logo icon #include_sidebar: true #=================================================================================== # Mkdocs Markdown Extentions, Plugins & extras #=================================================================================== markdown_extensions : - admonition - abbr - attr_list - def_list - footnotes - meta - md_in_html - codehilite - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - pymdownx.tabbed - pymdownx.details - pymdownx.inlinehilite - pymdownx.smartsymbols - pymdownx.tasklist : custom_checkbox : true - pymdownx.superfences - pymdownx.tabbed : alternate_style : true - toc : # insert a blank space before the character permalink : \"#\" plugins : - glightbox # istall requied: images/lightbox - search # add search box. - i18n : # language plugin. default_language : en languages : en : English ja : \u65e5\u672c\u8a9e es : Espa\u00f1ol - Add content files: **Copy/paste Tabs.md files** mkdocs serve Cnt+C mkdocs build mkdocs gh-deploy In github.com: create git repo in github.com (follow recommendation of Hernandez?) 1. Github > create new repo > name: {x: demo_docmaker } > description {dockmaker demo} > \u00a9Public > <\u00a9 Add readme file > <\u00a9 Add .gitignore: \u02c7{R} > \u00a9 Create repository mkdocs build Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 main > /(root) > \u00a9save (new page is created) Got to // Code > code > clone > htpps (copy github page address) https://github.com/MarceloRosales/mkd_LabNotes.git Connect Mkdocs to Git >_: git init git add . git status Connect Mkdocs to Github repository >_: git remote add origin {git_url} Sometime requires: git config --global user.name \u201cMyGitAccount\u201d git config --global user.email \u201cmyemail.com\u201d git config credential.helper store gedit gitignore (edit gitignore to don\u2019t track files\u2026??) git commit -m \u201cInitial Commit\u201d git status (empty) git push origin master Sometime requires: type github username: type github Password: (push from local master branch to remote master branch) Mkdocs site build and deploy in >_: mkdocs build mkdocs gh-deploy In github.com: Make sure deploy branch is gh-pages. 1. Repo settings > Pages > Source: Deploy form a branch > \u02c7Branch: \u00a9 gh-paages > /(root) > \u00a9save (new page is created) =================================== After first commit: Modify code. (and save files) mkdocs build mkdocs gh-deploy git add . git status git commit -m \u201ccommit message\u201d git push origin master Other git commands: git reflog (past git logs) git checkout -b other-branch (Switch to a new branch) git branch -a (lists of branches) rm -fr .git (remove git files) git config --global user.name \"MarceloRosales\" git config --global user.email \"...@hotmail.com\" git config credential.helper store git commit -m \"1 st commit\" git log # If want to revert to a preview\u2019s version, Copy hash click Q to quit. git checkout {hash copied from log} git checkout -b {new branch name} # Create a new branch. git branch {new branch name} {hash} # Create new branch, if revert to previous, add hash git checkout {branch name} # To change branches git merge {branch name} # merge branch to main :::","title":"Create Mkdocs site"},{"location":"es/08-Preparation/#create-bs4_book-in-rstudio","text":"//Rstudio > New Project > Book project using bookdown > \u2026[]\u2026 > Select book format: bs4_book > \u00a9 Open in new session. Add 08-Preparation.Rmd [Build] > Build Book > bs4_book (wil convert .Rmd -> .md in /_book)","title":"Create bs4_book in Rstudio"},{"location":"es/08-Preparation/#creating-symlinks","text":"To make symlink: ln -s /path/of/original/file /path/to/taget/dir/{filename} Box Sync/../.md -> ~/Documents/gitrepo/.md Ex. From: \u201c/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d To: \u201c/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d Samples \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\" ln -s \"/Users/marcelorosales/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" \"/Users/marcelorosales/Box Sync/Github/mkdocs/mkdocs_dumpAll/Samples/08-Preparation.Rmd\" Fail Partial address do NOT work. \u201c~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\u201d \u201c~/Documents/GitHub/Mkdocs_books/mkd_LabNotebooks/mkd_LabNotes/docs\u201d ln -s \"~/Box Sync/Github/mkdocs/bs4_LabNotes/_book/08-Preparation.md\" Allways work the in bs4_book .Rmd","title":"Creating symlinks"}]}